version: "3"

services:

#  zookeeper:
#    image: wurstmeister/zookeeper:latest
#    container_name: kafka-zookeeper
#    restart: always
#    ports:
#    - "2181:2181"
#
#  kafka:
#    image: wurstmeister/kafka
#    container_name: kafka-broker
#    depends_on:
#    - zookeeper
#    restart: always
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#      KAFKA_CREATE_TOPICS: "user-login-counts:1:1"
#      KAFKA_ADVERTISED_HOST_NAME: "${LOCALHOST_IP}"
#    ports:
#    - "9092:9092"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: kafka-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    depends_on:
    - zookeeper
    ports:
    - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  producer:
    build: kafka-producer
    container_name: kafka-producer
    depends_on:
    - kafka
    environment:
      KAFKA_URL: kafka:29092
      INPUT_TOPIC: "users-data"
    restart: always
    ports:
    - "9088:9088"

  datagen:
    image: confluentinc/ksql-examples:latest
    container_name: kafka-producer-generator
    depends_on:
    - zookeeper
    - kafka
    volumes:
    - ./schema:/schema
    command: "bash -c 'ksql-datagen \
                      schema=./schema/model.avro \
                      key=userName \
                          format=json \
                          topic=users-data \
                          maxInterval=9000 \
                          bootstrap-server=kafka:29092 \
                          propertiesFile=./schema/datagen.properties'"

  stream:
   build: kafka-stream
   container_name: kafka-stream
   depends_on:
       - zookeeper
       - kafka
   restart: always
   environment:
     KAFKA_URL: kafka:29092
     zookeeper_URL: zookeeper:2181
     INPUT_TOPIC: "users-data"
     OUTPUT_TOPIC: "user-login-counts"
     APPLICATION_ID: "user-login-counts-app"
   ports:
   - "9089:9089"

  consumer:
    build: kafka-consumer
    container_name: kafka-consumer
    depends_on:
    - zookeeper
    - kafka
    restart: always
    environment:
      OUTPUT_TOPIC: "user-login-counts"
      KAFKA_URL: kafka:29092
      CONSUMER_GROUP: "user-login-counts-group"
    ports:
    - "9090:9090"

volumes:
  schema: